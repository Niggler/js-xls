Développement d’un moteur de recherche d’informations sur Internet.MULTIMEDIA SOLUTIONS2 juillet au 30 novembre 2001(Rapport de stage)0. TABLE DES MATIERES0.	TABLE DES MATIERES	21.	HIGHLIGHTS	52.	INTRODUCTION	63.	L’ENTREPRISE MULTIMEDIA SOLUTIONS	73.1	HISTORIQUE	73.2	RAISON SOCIALE, STATUT JURIDIQUE ET ACTIONNARIAT	73.3	SOCIETES APPARENTEES	73.4	ACTIVITES	83.5	LES LOGICIELS CHEZ MULTIMEDIA SOLUTIONS :	83.5.1	Windex	83.5.2	Windex Server	103.5.3	Jimage	103.5.4	IndexGED	113.6	MARCHE ET CHIFFRE D’AFFAIRE	113.7	CONCURRENCE	113.8	RESSOURCES HUMAINES ET ORGANISATION DE L'ENTREPRISE	123.9	RECHERCHE ET DEVELOPPEMENT	123.10	SYSTEMES DE PRODUCTION	133.11	SYSTEMES DE GESTION	133.12	POLITIQUE DE SOUS-TRAITANCE ET D’ACHAT	134.	DIRECTION DE MULTIMEDIA SOLUTIONS	154.1	DIRECTRICE GENERALE ET COMMERCIALE : HELENE OMARI	154.2	DIRECTEUR TECHNIQUE : BRUNO LACOMBE	155.	LES METIERS DE L’INGENIEUR AU SEIN DE MULTIMEDIA SOLUTIONS	165.1	INGENIEUR : MARC MENDEZ	166.	LES OBJECTIFS DE LA MISSION TECHNIQUE	176.1	SUJET DE STAGE	176.2	OBJECTIFS, BESOINS ET SERVICES FONCTIONNELS	176.2.1	Filtrage des documents Word	176.2.2	Filtrage des documents PDF-Lzw	186.2.3	Recherche dans les news et les forums de discussions	186.2.4	Mise en œuvre du site de recherche	186.2.5	Génération de statistiques	196.2.6	Procédure de sauvegarde	196.3	BESOINS NON FONCTIONNELS	196.3.1	Développer en langage Java	196.3.2	Utilisation de VisualAge for Java	206.3.3	Portabilité	206.3.4	Performances	206.3.5	Besoin esthétique	216.4	MOYENS MIS A DISPOSITION	216.5	PLANIFICATION DU PROJET	216.6	STRUCTURE DU PROJET	227.	REALISATION DES FILTRES POUR WINDEX	237.1	FILTRAGE DES DOCUMENTS WORD	237.1.1	Analyse	237.1.2	Conception	247.1.3	Réalisaton	247.1.4	Validation	257.1.5	Intégration au logiciel Windex2	257.2	FILTRAGE DES DOCUMENTS PDF-LZW	267.2.1	Analyse	267.2.2	Conception	267.2.3	Réalisation	277.2.4	Validation	277.2.5	Intégration	277.3	FILTRE ASCII85	287.3.1	Analyse	287.3.2	Conception et Réalisation	287.3.3	Validation et Intégration	287.4	RECHERCHE DANS LES NEWS ET LES FORUMS DE DISCUSSIONS	298.	REALISATION DU SITE DE RECHERCHE	308.1	IMPLEMENTATION DE LA BASE DE DONNEES D'URLS	308.1.1	AfnicSnooper et UrlBase : Les sites en ".fr"	308.1.2	D'autres sites :	318.2	INSTALLATION DU MOTEUR DE RECHERCHE	328.2.1	Le nom de domaine : Naevis	328.2.2	L'interface Web	328.2.3	Le traitement des requêtes par la servlet	338.3	FORMULAIRE D'AJOUT D'URL	338.3.1	Le formulaire	338.3.2	La démarche	348.3.3	Méthodes de détection des tricheurs	348.4	FORMULAIRE D'ADMINISTRATION	358.4.1	Le contrôle	358.4.2	Les statistiques	368.5	MISE EN PLACE SUR LE SERVEUR ODIN	368.6	PROCEDURE DE SAUVEGARDE	379.	RESULTATS	399.1	LES FILTRES	399.2	CONSTRUCTION DE LA BASE DE DONNEES D'URLS	399.2.1	Installation du site de recherche	399.2.2	Formulaire d'ajout d'URL	399.2.3	Formulaire d'administration	399.2.4	Procédure de sauvegarde	399.3	ORIENTATIONS TECHNIQUES SOUHAITEES	3910.	CONCLUSION	4011.	GLOSSAIRE	4112.	BIBLIOGRAPHIE	4512.1	PROGRAMMATION EN JAVA :	4512.2	LES NAVIGATEURS :	4512.3	STRUCTURE DES DOCUMENTS MICROSOFT WORD	4512.4	LA METHODE DE LEMPEL-ZIV-WELCH :	4512.5	LES MOTEURS DE RECHERCHE :	4612.6	DIVERS	4713.	MATERIEL	4814.	ANNEXES	501. HighlightsMy project was a wonderful success and I am glad and proud to say that Multimédia Solutions is a very good place to make an internship, the working environment is very nice, developers are dynamic and young, directors are sympathetic and they put at your disposal very-performant hardware. I will keep a terrific reminder of this experience.2.  IntroductionLe 23 mai 2001, je rencontrais pour la première fois Hélène Omari et Bruno Lacombe. Ce jour-là, à Cestas, ils me proposèrent, lors de l’entretien que nous avons eu, de développer un site de recherche sur Internet à partir de la technologie de Windex (le logiciel d’indexation et de recherche développé par Bruno Lacombe). Ce site de recherche permettrait de démontrer la puissance de recherche de Windex et en particulier l’efficacité de sa nouvelle version Windex Server.Le lendemain, je signait une convention à l’Enseirb qui faisait de Bruno Lacombe, le directeur technique de Multimédia Solutions, mon maître de stage pour la période du 2 juillet au 30 novembre 2001.Durant ces cinq mois, j’ai pu réalisé les objectifs associés à ce stage, à savoir :➢ L’approfondissement et la diversification de mes connaissances informatiques en langage Java, sur les Servlets, sur les mécanismes de transfert et de stockage de l’information sur Internet, sur l’utilisation d’Internet comme source d’informations et d’outils de travail.➢ Appréhension d’une entreprise et son environnement : Découverte de Multimédia Solutions (assistée de l’enquête entreprise, je le reconnais), et aussi des autres entreprises présentes dans la pépinière de Cestas (en particulier d’Erebus, entreprise en infographie, partenaire de Multimédia solutions et anecdotiquement créatrice de la nouvelle charte graphique de l’Enseirb). Découverte de certains avantages et de certaines contraintes de l’entreprise (on peut par exemple entièrement se consacrer à son travail mais on ne peut s’en détacher totalement, c’est selon l’humeur de l’interprétation). Adaptation à l’environnement…Ce rapport relate, à travers l’enquête entreprise puis à travers l’explication de mon travail, le déroulement de mon stage, mais ne pourra refléter que médiocrement la véritable richesse des expériences que j’ai pu partagé au sein de Multimédia Solutions.3. L’Entreprise Multimédia Solutions3.1 HistoriqueLa société Multimédia SOLUTIONS est née le 1er mai 1999 de la rencontre de ses deux fondateurs :➢ Hélène OMARI : responsable commercial et gérante de l’entreprise.	Chef de Projet, diplômée du Centre d’Etudes Supérieures Industrielles à Blanquefort➢ Bruno LACOMBE : développeur informatique et responsable technique.	Diplômé de l’Université de Bordeaux I - Département InformatiqueLors de sa création, l’entreprise a choisi d’établir son siège social au sein de la Pépinière d’Entreprises de CESTAS (Bordeaux Productic), et ce afin de bénéficier de services d’accompagnement à la création et à l’évolution de la société.Le 1er février 2001, Marc MENDEZ, ingénieur informatique, a été embauché et travaille depuis au sein de Multimédia Solutions.Le 25 octobre 2001; Hélène Omari était nommé "Aquitaine de l'année 2001", meilleure chef d'entreprise de l'aquitaine.3.2 Raison sociale, statut juridique et actionnariatMultimédia SOLUTIONS est une SARL au capital de 50 000 Frs (ce chiffre vient tout juste de passer à 15000 € en décembre 2001).• Madame Hélène OMARI, Gérante, détient 51 % des parts• Monsieur Bruno LACOMBE, Associé, détient 49 % des parts. L’entreprise  fonctionne en autofinancement.3.3 Sociétés apparentéesMultimédia Solutions est une société indépendante de toute autre société.De plus, nous le répétons encore ici, elle fonctionne en autofinancement.3.4 ActivitésMultimédia Solutions fait face à au moins 4 types d’activités :MétiersActivitésOffresClientsEditeur de logicielsDéveloppement et commercialisation de leurs propres logiciels.Moteurs de recherche d’informations pour sites Web,CD-ROM, Intranet, réseau Internet(Windex).PME/PMIGrands ComptesAdministrationsSociétés Informatiques(Nationales et Internationales)Prestataires de services InternetHébergement  et création de sites InternetDéveloppement de sites Internet.Hébergement sur notre serveur.Référencement.Achat de noms de domaines Internet.PME/PMIGrands ComptesAdministrationsDéveloppeur de logiciels spécifiquesAudit, analyse, aide à la conception de cahiers des charges.Développement de logiciels.Formation des utilisateurs.Prestations Lotus.Tout développement de bases de données et logiciels propres à la gestion interne de l’entreprise. PME/PMIGrands ComptesAdministrationsCo-traitance informatiqueIdemIdemSociétés de prestations informatiques3.5 Les logiciels chez Multimédia Solutions :3.5.1 WindexWindex est le produit phare de l'entreprise Multimédia Solutions. Ce logiciel est destiné à indexer un grand volume de documents pour ensuite pouvoir y accéder par l'intermédiaire de requêtes en langage naturel. Son principe est le suivant : il s'agit en fait de créer une base de mots à partir des documents indexés.Les domaines d'application de Windex sont vastes, puisqu'il permet à son utilisateur d'indexer son disque dur ou un site Web complet pour pouvoir ensuite accéder à la base de données nouvellement créée au niveau local ou en Intranet. Windex peut également indexer un CD-ROM complet, ce qui permet de créer facilement un catalogue électronique en de nombreux exemplaires à partir d'un ensemble de documents pas forcément hyperliés entre eux - par exemple des catalogues, toutes documentations (techniques, juridiques, économiques, scientifiques...), revues de presse, encyclopédies...Il offre ainsi aux utilisateurs un moteur de recherche simple et rapide sur une base de documents personnels ou professionnels.Windex est composé de 2 modules :• le module d'indexation,• le module de recherche : il s'agit d'une Applet Java positionnée dans un CD-ROM, sur un serveur Intranet ou dans un site Web.La puissance de l'indexation :Le premier module de Windex permet un paramétrage très fin, permettant d'optimiser au mieux l'indexation. Voici les possibilités que nous ouvre cette application :• Choix de l'indexation d'un CD-ROM, un site Web, un Intranet.• Choix des langues utilisées dans les documents.• Indexation des documents au format HTML, PDF, XML ou TXT.• Exclusion de mots (mots courants dans la langue utilisée, mots trop fréquemment utilisés dans les documents, ou mots non significatifs dans une recherche...)• Exclusion d'Urls, de fichiers, de types de documents.• Choix du nombre de mots du résumé.• Création des catégories de recherche.• Paramétrage complet de l'outil de recherche (textes, messages, couleurs, boutons).• Choix des opérateurs booléens dans la langue de l'utilisateur.• Positionnement de la fenêtre des résultats ou affichage des résultats dans une page Html de l'application.• Mise en évidence des mots recherchés dans le document affiché (surlignage, clignotant, couleurs...).Nota : En fait, Windex n'indexe que les documents au format HTML.Pour traiter les documents aux autres formats (PDF, TEXT, XML), Windex les convertit tout d'abord au format HTML, puis les indexe en tant que fichier HTML.Une consultation rapide pour une recherche avancée :Le second module de Windex est constitué de l'applet Java intégrée à la page Web générée lors de l'indexation. Ses fonctionnalités sont les suivantes :• Il permet une recherche et une consultation intuitives comme sur le Web.• Il permet aussi la recherche des documents par catégories ou thèmes, la recherche sur les dates, et la recherche multilingue.• Il gère les accents, les pluriels, les minuscules et majuscules.• La recherche est effectuée en langage naturel, dans la langue du document indexé. Il n'est pas nécessaire de connaître des mots-clefs ou un langage de requête.• Windex gère la recherche en phonétique (pour la langue française).• Les mots recherchés sont mis en évidence dans le document affiché.• Il suffit d'insérer le CD-Rom dans votre lecteur. Aucune installation de logiciel n'est nécessaire sur votre ordinateur, Windex est développé sans module serveur.Une portabilité totale :Développé en langage Java, le moteur de recherche Windex fonctionne sur toute plate-forme (Windows 9X, NT, Windows 2000, MacOs, Linux, Unix, Psion...) possédant une machine virtuelle Java compatible minimum 1.1.Des sites Web qui utilisent Windex :• http://www.alsace.iufm.fr • http://www.drire-lr.org • http://www.ville-douai.fr • http://www.mmedium.com/presse/ • http://www.lug.com • http://www.infosport.orgUn article au sujet de Windex 2 est paru dans le 01-informatique du 13 juillet 2001 (cf. Annexe).Cet article est consultable à l'adresse suivante :http://www.enseirb.fr/~barraud/Thirdyear/Stage/presse/3.5.2 Windex ServerCependant, Windex est en train de subir des évolutions lui permettant de gérer une base de données variables. En effet, Windex ne permet pour l'instant qu'une indexation globale d'un stock de documents. Windex Server permettra ainsi une indexation différentielle : la gestion des dictionnaires de Windex sera modifiée pour prendre en compte l'indexation différentielle, c'est-à-dire que l'on indexera uniquement les documents modifiés entre deux indexations.Il sera complété par un système de mise à jour, gérant les dates de modifications des documents.Cela permettra à Windex de ne plus se contenter de la gestion de bases de données fixes. Windex Server pourra, par exemple, indexer un site Web quotidiennement, en ne traitant que les nouvelles pages, réduisant ainsi grandement le temps d'indexation.C'est justement l'existence de Windex Server qui a donné naissance à mon projet de développement d'un moteur de recherche sur Internet.3.5.3 JimageLe logiciel Jimage est une base de données d'images disponibles sur CD-Rom, en Intranet, via le Web.Associé au moteur de recherche Windex, Jimage permet de rechercher une image avec une phrase plein-texte. L'image sélectionnée pourra être retraitée (filtre de contraste et adoucisseur), imprimée en tout ou partie.Jimage est composé de deux outils logiciels : • le premier génère automatiquement une base de données d'images et permet d'associer à chaque image des mots clefs visant à l'identifier,• le deuxième est le navigateur d'images mis à la disposition de l'utilisateur final pour rechercher, sélectionner et visualiser les images.Les fonctionnalités du logiciel Jimage :• Recherche d'une image via le moteur de recherche (logiciel Windex intégré dans Jimage)• L'utilisateur bénéficie de la recherche en langage naturel (phrase en français).• Il n'est donc pas nécessaire de sélectionner des champs prédéterminés.• La recherche des images peut s'effectuer sur plusieurs CD-ROM constituant la banque d'images.Jimage propose des lots d'images. • L'utilisateur choisit un lot ou livre d'images, puis fait défiler les images de ce lot.• Sélection d'une partie de l'image et utilisation du zoom.• Impression de l'image en partie (zoom) et/ou en totalité.Application de filtres sur l'image sélectionnée• L'adoucisseur d'image : Il améliore la qualité des images en noir et blanc purs et donne une impression de niveaux de gris.• Le rehausseur de contraste noir et blanc.Le logiciel Jimage permet de gérer les formats d'images suivants : gif, png, jpg, le tiff noir et blanc.Développé en langage Java, Jimage fonctionne sur tous types d'ordinateurs (PC, Mac, Unix, Linux...).3.5.4 IndexGEDIndexGED est un logiciel de gestion de notes de services. Il est composé de deux modules :• le 1er module traite les documents numérisés ou créés sous traitement de texte pour générer leur indexation automatique.• le 2ème module permet de rechercher, d’afficher et d’imprimer les documents ainsi indexés.Les différentes fonctionnalités :• Vous pouvez sélectionner un document existant ou en créer un nouveau. • Si ce document doit être scanné, IndexGED permet d’appeler le logiciel de numérisation puis offre la possibilité de corriger les zones de texte passées à l’OCR (outil de reconnaissance de caractères).• Les textes générés lors du passage OCR sont indexés par le moteur de recherche.• L’utilisateur peut trouver les documents en effectuant une recherche plein-texte. IndexGED est un logiciel développé en langage Java. Il fonctionne donc lui aussi sur toutes plates-formes (PC, Mac, Linux, Unix...)3.6 Marché et chiffre d’affaireSelon le type d'activités, Multimédia Solutions propose ses services sur les marchés locaux, nationaux et internationaux.La politique générale de Multimédia Solutions est la suivante :• Sur le marché local, elle recherche les prestations de services.• Sur le marché national, elle cible la vente de produits et de prestations associées à ces produits.• Enfin, le marché international ne concerne que la vente de produits. Notons à ce titre la présence de Multimédia Solutions au salon PC World Expo 2000 à Tokyo.Cependant sur ces marchés, Multimédia Solutions vise principalement le marché professionnel :• Les PME, PMI (Solectron)• Grand Comptes (France Telecom, EDF…)• Les administrations et organismes rattachés (Ministère de la justice)• Les collectivités territoriales (CPAM, CAF, URSAF…)3.7 ConcurrenceVoici les quatre principaux concurrents directs de Multimédia Solutions sur le marché du logiciel de recherche :• Spirit : Moteur de recherche français avec recherche sémantique.• Altavista Search (pour CD-Rom et Intranet).• IIS : Indexateur interne à Windows NT (pour l'Intranet).• Spy-CD : Logiciel en Java (uniquement pour Internet Explorer sous Windows). C'est le produit qui se rapproche le plus de Windex3.8 Ressources Humaines et Organisation de l'entrepriseMon arrivée à Multimédia Solutions a porté, pendant 5 mois, l'effectif de l'entreprise à 4 personnes.Voici l’organigramme représentant les relations dans l'entreprise pendant mon stage.3.9 Recherche et développementDepuis le début de l'existence de l'entreprise, les idées prennent forme dans la tête de Bruno Lacombe (concepteur du logiciel Windex). Et il n'a cesse de les mettre en œuvre. C'est principalement lui qui représente la division recherche et développement. De temps à autre il reçoit l'aide d'un stagiaire - comme je l'ai été moi-même -, ce qui leur permet un échange de compétences qui peut se trouver avantageux.Les derniers projets en cours (ou tout juste terminés) sont les suivants :➢ L'indexation des documents en japonais par Windex➢ L'indexation des documents en arabe.➢ La gestion du proche lors de l'indexation des documents.➢ Jimage➢ Jimagepro (Version client-serveur de Jimage).➢ Windex Server➢ Le moteur de recherche sur Internet utilisant la technologie de Windex Server : Naevis3.10 Systèmes de productionLes locaux :Multimédia SOLUTIONS loue, depuis le 1er mai 1999,  2 bureaux au sein de la Pépinière d’Entreprises de Cestas, Bordeaux Productic.La superficie total des locaux est de 46 m2.Les équipements de productions sont composés :- d’ordinateurs PC (serveur Internet, machines de développement),- d’une ligne de communication spécialisée de 128 Ko (LS Internet) (prochainement ADSL),- d’outils logiciels assurant le développement des produits et des services   Multimédia Solutions s'appuie sur les grands standards du marché, à savoir les logiciels Lotus  Notes et le logiciel VisualAge for Java d’IBM.Les principaux fournisseurs sont :- la société INTERNEXT pour l'accès Internet à hauts débits- Lotus Notes (logiciels)- IBM (logiciels)De plus, la gestion de la production et des développements est assurée par une base de fiches de développement qui permet de suivre à tout moment l’évolution d’un projet.3.11 Systèmes de gestionLa gestion commerciale :L’administration et la gestion de l’entreprise sont assurés par Hélène OMARI.La saisie des écritures comptables est effectuée par l’entreprise (grâce au logiciel EBP Compta 5).Le suivi comptable et l’accompagnement à la gestion sont effectués par Monsieur MINJON, Expert-Comptable (la gestion commercial est aussi assistée du logiciel EBP gestion commercial).Multimédia SOLUTIONS bénéficie également de l’accompagnement de Bordeaux Productic (Pépinière d’entreprises). Cette structure met en place des réunions d’informations, comités de pilotage, consultations auprès d’Experts de différents domaines...Les relations bancaires :Multimédia SOLUTIONS a fait le choix du CREDIT MUTUEL du Sud-Ouest, et tout particulièrement l’Agence de Pessac Centre.Le responsable d’Agence, Monsieur MISME, accompagne la croissance de notre activité et gère notre compte chèque, ainsi que le Livret B (ce dernier est rémunéré à 2,25 %).A ce jour, l’entreprise n’a fait aucun emprunt bancaire. 3.12 Politique de sous-traitance et d’achatPolitique de sous-traitance :Multimédia Solutions est une entreprise qui aime son indépendance et qui n’a pas de politique de sous-traitance, elle aime à régler ses problèmes comme une grande.Certains travaux sont cependant co-traité par les partenaires de l'entreprise, en particulier les travaux d'infographie, effectuées par la société Erebus. De même pour certaines formalités administratives et comptables qui sont assurées par M. Minjon, l'expert comptable.Politique d'achat :La prévision des achats se fait principalement en fonction des besoins techniques (soit directement de la part du personnel technique, soit des projets en cours de réalisation). Elle est quantifiée par rapport au retour sur investissement que l'on peut essayer de prévoir.4. Direction de Multimédia Solutions4.1 Directrice Générale et Commerciale : Hélène OmariDiplômée d'un BTS secrétariat (1982), puis du CESI (Centre d'Etudes Supérieures Industrielles) de Blanquefort où elle a suivi une formation de Chef de Projet en informatique de gestion, Hélène Omari est l'une des co-fondatrice de Multimédia Solutions.Hélène c'est la fonction vitale de Multimédia Solutions.Son rôle dans l'entreprise est à la fois large, vague, ultra diversifié et décisif.Elle prend en charge :• Le management : c'est elle qui énonce les règles de vie, qui définit les postes, leurs cadres…• La stratégie commerciale : elle est définie de concert avec Bruno Lacombe, le responsable technique de l'entreprise. A eux deux, ils fixent les objectifs financiers et commerciaux de la société.• Les contacts commerciaux.• La finance : Elle établit les budgets, trouve des investisseurs (les clients),• Les relations : avec les fournisseurs, les disributeurs, les gros clients, les partenaires commerciaux, etc…• L’aspect juridique : établissement des contrats.• La gestion générale : elle veille au bon déroulement des activités de l’entreprise, elle est toujours présente sur les gros problèmes qui peuvent survenir dans chacune de ces activités.• Tout le reste…(c'est beaucoup plus qu'on ne pourrait le croire).Donner un titre à sa fonction ressemblerait à Directrice générale, commerciale, administrative, financière et des ressources humaines.Au final, Hélène, c'est celle qui prend les décisions une fois l'analyse du problème effectuée (quelle soit personnelle ou commune).4.2 Directeur Technique : Bruno LacombeDiplôme de l'université de Bordeaux I, Bruno Lacombe est lui aussi l'autre fondateur de Multimédia Solutions.Bruno Lacombe est le directeur technique de l'entreprise, son rôle est presque aussi large que celui d'Hélène mais ce sont avant tout les aspects techniques qui nécessitent son aval et constituent la majeure partie de son travail.Il est le créateur des logiciels proposés par Multimédia Solutions. Il passe d'ailleurs beaucoup de temps à améliorer les différentes versions de ses logiciels, souvent suite aux remarques des clients ou de Marc Mendez.Il conçoit toutes les solutions informatiques des prestations vendus par Multimédia Solutions.Si Hélène est la fonction vitale de Multimédia Solutions, Bruno est en le cerveau.5. Les métiers de l’ingénieur au sein de Multimédia Solutions5.1 Ingénieur : Marc MendezMarc Mendez a suivi une formation à l’université de Bordeaux I où il a obtenu un DUT d’informatique puis une licence d’informatique.Fort d’une expérience de 6 ans dans une SSII, il possède des compétences particulières en programmation C, C++, Pascal, sous Shell et en développement de base de données Oracle. Il est également très compétent dans la gestion et l'administration des réseaux.Il est arrivé à Multimédia Solutions le 1er février 2001.Depuis, Marc apporte toutes ses compétences afin de compléter le travail de Bruno :• Il participe aux choix techniques lors des réunions technico-commerciales. • Il administre le serveur Unix de l'entreprise : le serveur Apache (Web) qu'il a lui-même mis en place et la base de statistiques associée ainsi que la mise en œuvre des sauvegardes périodiques (les lundis, mercredis et vendredis). • Il exerce une veille technique sur l'entreprise et une veille technologique sur l'environnement.• Il s'occupe en partie de la hot-line (destinée à dépanner les utilisateurs-clients).• Par moments, il intègre la division R&D et travaille sur les projets en développement.Marc est très rigoureux dans son travail, il sait s'adapter à tous les types de travaux auxquels il est confronté, même s'il doit persévérer. Il parle couramment Anglais et connaît assez bien l'Espagnol. Il possède des connaissances informatiques aussi larges qu'hétéroclites, dont il m'a fait profiter durant tout le stage (en effet, Marc et moi avons travaillé dans le même bureau).  Je lui ai d'ailleurs un tant soi peu rendu la pareille en lui transmettant les premières notions de Java au début de sa propre formation Java.Enfin, Marc a un avis sur tout, ce qui est véritablement très intéressant lorsqu'on lui pose des questions…6. Les objectifs de la mission technique6.1 Sujet de stageVoici le sujet de mon stage tel qu'il m'a été présenté le 23 mai 2001 :Objectif du stage : Développer un site de recherche d’informations sur InternetMonsieur Guillaume Barraud aura la charge de développer un site Web dédié à la recherche de documents et d’informations.Ce site intègrera la technologie actuellement présente dans notre produit Windex Server.Les fonctionnalités de départ du site :	- recherche sur les documents HTML, PDF, TXT	- recherche phonétique pour les documents français	- gestion du proche	- recherche en plein texteFonctionnalités à développer :	- recherche sur les documents Word + autres formats	- recherche dans les forums de discussions et les news	- formulaire d’ajout d’URL	- statistiques de connexion	- statistiques des mots recherchés	- méthode évitant “les tricheurs”- aspiration d’URL et implémentation de la base de données- mise en place du site.Environnement de programmation : JavaOutil de développement : Atelier logiciel VisualAge for Java de IBM6.2 Objectifs, besoins et services fonctionnels6.2.1 Filtrage des documents WordLe premier objectif de ce projet est la réalisation d'un convertisseur de document Word vers HTML pour Windex2.Besoin : En effet, c'est l'une des demandes principales des clients de la société Multimédia Solutions que de pouvoir indexer les documents au format Word. Mais c'est aussi se positionner par rapport à la concurrence et acquérir de nouvelles parts de marché.Service : L'idée est alors d'obtenir un programme Java, portable, qui devra convertir un document Microsoft Word sous forme d'un document HTML, en prenant en compte certains éléments d'informations du document (auteur, mots-clefs...).Ce convertisseur devra, dans la mesure du possible, générer un fichier HTML aussi proche que possible de l'original, en terme de présentation, mais surtout en terme de contenu (c'est ce fichier Html que Windex pourra indexer).A terme, ce développement sera intégré au logiciel Windex, qui pourra donc désormais traiter les fichiers Word.6.2.2 Filtrage des documents PDF-LzwUn filtre de conversion de documents PDF en Html existe déjà pour Windex2. Il prend en compte le mode de compression Deflat (mieux connu sous le nom de ZIP). Cependant, il existe un autre type de compression des fichiers PDF, la compression LZW. Le travail consistera à compléter ce filtre (Pdf vers Html) avec l'algorithme de décompression LZW (Lempel-Ziv-Welch).Besoin : En effet, l'indexeur de Windex, pour l'instant, ne prend en compte que les fichiers au format PDF compressés avec le mode Deflat, mais non ceux compressés avec l'algorithme LZW.De nombreux clients ont déjà soumis des documents Pdf-Lzw, ils étaient jusqu'alors recompressés avec le mode Deflat afin d'être traité par Windex.Service : Il faudra alors compléter le convertisseur PDF en HTML de Windex afin qu'il puisse aussi exploiter les fichiers PDF-Lzw (i.e. les fichiers au format PDF compressés avec l'algorithme de Lempel-Ziv-Welch).Il faudra tout d'abord étudier les sources de ce programme, ainsi que la documentation sur le format des fichiers PDF et sur l'algorithme LZW.6.2.3 Recherche dans les news et les forums de discussionsWindex se préparant à entrer sur le Web, il serait judicieux de pouvoir aussi effectuer des recherches sur le format de données des groupes et des forums de discussions.Besoin : En effet, il existe une mine d'informations potentielle dans les news et les forums de discussions de chaque site Internet et plus particulièrement sur ceux des portails de recherche actuels.Service : Il faudra alors rajouter un module à Windex2, lui permettant d'indexer les documents aux formats des news et des forums. Une petite étude devra être préalablement menée afin d'analyser la structure de ces documents et d'en retirer les informations pertinentes, et aussi afin de juger de la pertinence d'un tel filtre.6.2.4 Mise en œuvre du site de rechercheCette partie du stage ne pourra être réalisé qu'après la sortie de la nouvelle version de Windex2 Server.Une fois Windex Server en état de fonctionnement, nous allons le porter sur le Web, afin de le transformer en un moteur de recherche. En effet, la fonctionnalité d'indexation différentielle lui permet désormais de s'adapter beaucoup plus facilement à la fonction de moteur de recherche de sites Internet.Les objectifs spécifique à la mise en place de ce moteur sont les suivants :• Le moteur de recherche devra être déployé sur le serveur de l'entreprise (Zeus).• Un module d'administration à distance devra être conçu sur le serveur Zeus, il devra permettre de gérer la base de données du site à distance et ceci de manière entièrement sécurisée.• L'interface graphique du site Web devra être conçue et réalisée.• Il faudra aussi développer une méthode de détection des ``tricheurs'' : On entend par «tricheurs», les sites qui, par différents moyens, essaient d'influencer de manière non conforme le moteur de recherche pour apparaître en priorité dans les résultats.• Il faudra prévoir et faire valider un formulaire d'ajout d'URL à indexer par le serveur.• Enfin, il faudra alimenter la base de données du site de recherche, contenant les URLs, afin de donner à ce moteur de recherche l'essence dont il aura besoin.6.2.5 Génération de statistiquesL'utilisation de Windex2 sur un serveur et bien plus encore sur le site de recherche nous amène à nous poser des questions sur son efficacité vis-à-vis des utilisateurs clients.Besoin : En effet, c'est l'efficacité de la recherche qui poussera les internautes à son utilisation. Il nous faut donc pouvoir à tout moment la mesurer.Service : Un générateur de statistiques pourra alors être implémenté, répondant aux questions suivantes :• Quels sont les mots les plus recherchés ? • D'où viennent les utilisateurs ? • Les utilisateurs trouvent-ils rapidement les informations ? • Combien y a-t-il d'utilisateurs connectés à cet instant ?• Combien y a-t-il de recherches par jour, par semaine … ?Cette liste n'est pas exhaustive : il faudra voir avec les responsables de l'entreprise quelles informations pertinentes pourront apparaître.6.2.6 Procédure de sauvegardeLe passage de Windex2 à Windex2 Serveur nous apporte l'indexation différentielle et donc la possibilité pour les documents indexés d'être modifiés, supprimés, rajoutés... Cependant un telle manipulation de la base de documents génèrent souvent des erreurs.Besoin : Il faut donc pouvoir garantir l'intégrité des informations stockées.Service : Une procédure de sauvegarde devra alors être mise en place, permettant une sauvegarde automatique et/ou manuelle, périodique et/ou ponctuelle, partielle et/ou complète.6.3 Besoins non fonctionnels6.3.1 Développer en langage JavaLe choix du langage Java pour le développement de ces applications a été motivé par les points suivants :• sa compatibilité, en effet un programme développé en Java peut s'exécuter sur n'importe quelle machine, à condition bien sûr que celle-ci dispose d'une Machine Virtuelle Java (J.V.M. en anglais). Cette particularité de Java (par rapport par exemple à son principal concurrent C++) permet de ne pas avoir à "porter'' une application d'une machine à l'autre ou d'un système d'exploitation à un autre. Ainsi, un applicatif développé en Java répond aux besoins d'un marché bien plus important que s'il avait été développé dans un autre langage.• son approche objet, car elle est tout à fait adaptée à la manipulation de plusieurs types de documents en tant qu'objets (ou même plusieurs versions du format d'un document peuvent être considérée comme des objets).• sa fiabilité et sa robustesse, Java est très récent (1995), ce qui lui permet d'éviter les écueils de ses concurrents et les imperfections de certains langages plus anciens. Il est de plus particulièrement adapté à Internet (Applet Java, Servlet, Serveur d'applications).• son omniprésence, que ce soit dans l'entreprise, avec Oracle ou Lotus Notes ou sur Internet (respect des protocoles POP3, SMTP, HTTP, LDAP, JDBC...), Java se retrouve presque partout, ce qui est encore un atout dans une politique de portabilité totale. • sa biblioèthéque, très fournie.Enfin, son faible coût a conforté le choix de Java pour ces développements. En effet,  les outils de développement Java sont soit gratuits (c'est le cas du Java Development Kit de Sun), soit très bon marché (VisualAge for Java), contrairement aux suites développeurs classiques en C++ (comme Visual C++ de Microsoft ou Borland C++).6.3.2 Utilisation de VisualAge for JavaL'utilisation de VisualAge pour Java s'est imposée de manière presque naturelle. Cet AGL nous offre une rigueur inégalable dans la production de code. En effet, VisualAge met à notre disposition :• les règles de définition des fonctions,• un testeur de code,• une complétion automatique des noms de méthodes (permettant de se former en temps réel),• un compilateur incrémental (à chaque sauvegarde d'une fonction, VisualAge recompile),• un VCE, un générateur d'interface très pratique,• un débuggeur, avec possibilité de modifier le code pendant l'exécution,• une option de versionnage du projet (très pratique pour les sauvegardes)...Ainsi VisualAge nous évite toutes les erreurs les plus simples, nous permettant une meilleure concentration sur le vif du problème.6.3.3 PortabilitéL'une des particularités de Windex est sa formidable portabilité. En effet, l'applet Java de Windex fonctionne sur toutes les plates-formes possédant une machine virtuelle Java compatible minimum 1.1. Toutes les réalisations venant enrichir Windex se doivent alors de respecter cette portabilité.De plus, Windex doit tenir compte des évolutions du marché en ce qui concerne sa compatibilité avec les documents au format HTML, TXT, XML, PDF, mais aussi tous les documents Word désormais.C'est pourquoi le convertisseur de documents Word vers HTML devra par exemple prendre en compte les différentes versions de Word disponibles.De même le site de recherche devra être compatible avec les différents navigateurs existants.6.3.4 PerformancesLe traitement des documents par l'indexeur de Windex se fait très rapidement. Le rajout de convertisseur ne doit pas infirmer ces performances de manière trop significative. En effet, le temps d'indexation ne doit pas se trouver doublé ou triplé par la présence de documents Word ou PDF-Lzw. De même, pour l'espace mémoire utilisé, les applications créées ne doivent pas encombrer la mémoire vive de l'ordinateur lors de leur exécution.Il en va de même pour la recherche, en effet, une recherche avec Windex est presque instantanée, elle se doit de le rester.Une série de tests, à chaque phase du projet, viendra vérifier et valider ces points. Cependant, le respect de ces besoins ne doit pas augmenter le temps de développement de manière trop importante.6.3.5 Besoin esthétiqueL'aspect de l'interface Internet se doit de retenir l'attention du visiteur. Ainsi la page Web contenant le moteur de recherche doit être agréable à regarder.6.4 Moyens mis à dispositionMatériel : Dès le premier jour, une station de travail dans la même pièce que les deux développeurs, Bruno Lacombe (mon maître de stage) et Marc Mendez, a été mis à disposition. Il s’agit que l’ordinateur Janus (cf. Annexe : Plan du réseau informatique), un PC Pentium sous environnement Windows 95.J’ai aussi la possibilité d’utiliser le macintosh d’Erebus pour les tests spécifiques à cet environnement.Logiciel : Après l’analyse des besoins et au fur et à mesure de la conception des différentes étapes du projet, il m’a été fourni les logiciels répondant à mes demandes.• IBM VisualAge for Java : c’est l’atelier logiciel sous lequel j’ai programmé en Java.• Witched : un visualisateur de fichier sous forme hexadécimal.• Plusieurs éditeurs de texte : Emacs, Jext, PFE.• Des traitements de texte : Microsoft Word, Lotus Word Pro.• Plusieurs navigateurs Internet : Microsoft Internet Explorer, Netscape, Mozilla, Opera.• Un méta-moteur de recherche : Copernic 2001 Basic.• Le logiciel Windex.• Des logiciels et systèmes de gestion de base de données : Microsoft Access, MySQL.• Un logiciel de retouches d'images PaintShop Pro qui m'a permis de dessiner certains éléments d'interface sur le site de recherche.• MozzleStd, un logiciel de vérification de disponibilité des noms de domaines, qui m’a aidé à trouver beaucoup plus facilement le nom du site de recherche.6.5 Planification du projetVoici le planning prévisionnel de mon projet :Juillet : Prise en main du poste de travail ; Installation des différents logiciels de développement Enquête entreprise.Filtrage des documents Word.Août : Filtrage des documents Pdf-Lzw.Septembre : Filtrage des.documents Ascii85 et analyse de la faisabilité du moteur de recherche.Octobre : Conception du site de recherche et de ses composants.Novembre : Derniers réglages du site & élaboration du rapport.6.6 Structure du projetLa finalité de mon projet est d'améliorer Windex, tant dans sa partie technique (à travers le développement des filtres) que dans sa partie commerciale (à travers la réalisation du site de recherche montrant au public les possibilités de Windex).Aussi, deux parties distinctes découpe mon projet :7. Réalisation des filtres pour WindexDans une première approche de l’entreprise et de l’environnement logiciel, il m’a été demandé d’implémenter différents filtres pour le logiciel Windex afin d’étendre la palette des formats qu’il supporte.7.1 Filtrage des documents WordL'une des demandes principales des clients de Multimédia Solutions en ce concerne le logiciel Windex est la possibilité de pouvoir également indexer les documents au format Word (rappelons que Windex supporte pour l’instant les formats Html, Xml, Txt et Pdf). Aussi il m’a été demandé de créer une application permettant au logiciel Windex d’indexer les documents Word.7.1.1 AnalyseUne première analyse sur la manière dont Windex réalise l’indexation des différents formats de documents nous donne un premier élément de réponse : Windex n’indexe que les documents au format Html, les documents aux autres formats sont d’abord convertis au format Html avant d’être indexé à leur tour (en tant que document Html)Pouvoir convertir un document du format Word au format Html nécessite en premier lieu une bonne connaissance de ces deux formats. La structure d’un document Html (écrit sous forme de langage HTML) en facilite grandement l’analyse (c’est d’ailleurs la raison pour laquelle ce format a été choisi pour être utilisé par Windex), ainsi que la création et la modification. Créer le document Html ne posera donc pas de problème majeur.La structure d’un document Word ne possède malheureusement pas la même facilité d’écriture.Il m’a donc fallu tout d’abord examiner la forme des documents Word et étudier leur structure.Une recherche sur le Web m’a permis de trouver le document wword8.html qui décrit (assez vaguement) la structure des documents Word 97 et à travers celle-ci de comprendre la structure générale de tous les documents Word (quelque soit leur version).Pour résumer, un document Word possède un FIB (File Information Block) qui contient les différents offsets nécessaires à la récupération des différents champs (de texte par exemple) à travers le document. Ce FIB est spécifique selon les versions de Word.Cette analyse fut très difficile car ce document manquait de précisions et de clarté sur beaucoup de points. Et la multitude des versions disponibles ne m’a pas facilité la tâche.Grâce au logiciel de visualisation des documents sous forme hexadécimal Witched, j’ai pu vérifier la véracité ou non de ces informations directement sur les fichiers Word que j’avais, et ainsi adapter mon programme aux différentes versions des documents.On peut d’ailleurs voir l’exemple de ce rapport en Word visualisé avec Witched :7.1.2 Conception et réalisation Les versions de Word disponible sont :• Word 1.0 pour Windows• Word 2.0 pour Windows• Word 6.0 pour Windows• Word 7.0 pour Windows (Word 95)• Word 8.0 pour Windows (Word 97)• Word 9.0 pour Windows (Word 2000)• Word 10.0 pour Windows (Word 2002) (XP)• Word 4.0 pour Macintosh• Word 5.0 pour Macintosh• Word 5.1 pour Macintosh• Word 6.0 pour Macintosh• Word 7.0 pour Macintosh (compatible Windows)La conception Objet n'a donc pas été de trop pour traiter la multitude de versions disponibles.Mon programme principal prend en entrée un fichier au format word et retourne un fichier Html.Le traitement du document word génère un objet WordDocument qui va contenir les informations relatives à ce document. Or la structure des documents diffère selon les versions.J'ai donc créé une interface WordDocument qui implémente les différentes classes correspondant aux versions de Word (regroupées tout de même).Le programme principal s'occupe donc de dispatcher les documents Word en fonction de leur version.Ensuite c'est la sous-classe WordXDocument (où X = 1, 2, 6, Mac) qui traite le document en fonction de ses caractéristiques et le transforme en Html.Voici donc les différentes classes et les versions qu'elles supportent :Word1Document• Word 1.0 pour WindowsWord2Document• Word 2.0 pour WindowsWord6Document• Word 6.0 pour Windows• Word 7.0 pour Windows (Word 95)• Word 8.0 pour Windows (Word 97)• Word 9.0 pour Windows (Word 2000)• Word 10.0 pour Windows (Word 2002) (XP)• Word 7.0 pour Macintosh (compatible Windows)WordMacDocument• Word 4.0 pour Macintosh• Word 5.0 pour Macintosh• Word 5.1 pour Macintosh• Word 6.0 pour MacintoshVeuillez vous référer à la documentation de l’API pour de plus amples détails sur l’implémentation.7.1.3 ValidationValider ce convertisseur fut l’une des tâches les plus difficiles, en effet, la multitude des versions de Word a multiplié les tests de manière très prononcée.Cependant, ce convertisseur a été testé sur un échantillon de plus de 120 documents, de toutes les versions.Le résultat était celui attendu pour l'ensemble des documents. En effet, pour tous les documents, le texte est rendu dans son intégralité, la mise en page est respectée :• Les structures de paragraphes et les retours à la ligne sont conservés.• Les hyperliens sont conservés.• Lorsque cela m’a été possible, j’ai respecté quelques éléments de mise en forme tels que le gras, l’italique…7.1.4 Intégration au logiciel Windex2Début Novembre s’apprêtait à sortir une nouvelle publicité pour Windex dans "Sos Developper". Celle-ci propose Windex avec l'indexation des documents au format Word. Nous avons alors immédiatement intégré ce module à la version commerciale du logiciel Windex.Cela a été l'occasion de la rectification de quelques problèmes résiduels.Outre la mise en place du module dans les sources du programme de Windex, il nous a aussi fallu modifier l'interface graphique de Windex afin de rajouter les éléments relatifs à cette option : une nouvelle case à cocher dans l'onglet "Types de documents".Depuis le 6 novembre, une nouvelle version de Windex est donc disponible, incluant la prise en compte du format Word.7.2 Filtrage des documents PDF-LzwCet objectif est légèrement différent du précédent malgré son apparente similitude. En effet, Windex gère déjà les fichiers au format Pdf, mais uniquement ceux compressés avec l’algorithme de compression Deflat (rappelons que le PDF utilise 2 types de compression le Deflat et le Lzw).Il m’a donc d'abord fallu comprendre l’algorithme de compression-décompression de Lzw.7.2.1 AnalyseLa méthode de Lempel-Ziv-Welch (LZW) consiste à remplacer par quelques bits, un mot, une phrase ou même un paragraphe entier. Ces bits sont constitués de manière unique à l’aide d’un dictionnaire (une table) créé au fur et à mesure des besoins.Les données encodées grâce à cet algoritme prenne la forme de séquences de codes de 9 à 12 bits de longueur. Chaque code représente :• Soit un caractère simple du fichier d’entrée (0-255),• Soit un clear-table marker (256),• Soit un EOD marker (257),• Soit une entrée de table qui correspond à une séquence de plusieurs caractères, préalablement stockée dans le fichier d’entrée (258 et plus).Initialement la longueur du code lu est de 9 bits et la table (le dictionnaire) ne contient des entrées que pour les 258 premiers caractères fixés. Lors de l’encodage, des entrées sont rajoutées à la table, associant de nouveaux codes à des séquences de caractères de plus en plus longues. Les filtres encodant et décodant possèdent bien évidemment des copies identiques de cette table.Lorsque l’encodeur et le décodeur, indépendamment mais de manière synchrone, réalisent que la longueur du code courant n’est plus assez longue pour représenter le numéro de l’entrée dans la table, ils augmentent le nombre de bits du code de 1. Le premier code de 10 bits est celui suivant la création du code 511 dans la table. Pareil pour 11 bits (1023) et 12 bits (2047). Les codes ne dépassant jamais 12 bits, 4095 sera le dernier code d’entrée de cette table Lzw.7.2.2 DéveloppementLa lecture de ces différents codes sur 9, 10, 11 et 12 bits a été le principal obstacle lors de la conception et la réalisation de ce filtre. Il a en effet été difficile de bien se caler au bit près, surtout lors des passages de 9 à 10 ou 10 à 11…Voici par exemple la manière dont sont lus les codes 9 bits à travers la lecture des bytes (octets).On peut remarquer que 9 octets d’informations ne nous donnent que 8 codes.La réalisation de ce filtre a été moins globale que celle du filtre précédent car celle-ci se limitait à la conversion d’un flux de texte et non du document entier. Il ne s’agit plus ici de rechercher cette zone de texte puiqu’elle nous est donnée en entrée. Et en plus tous les problèmes liés à l’encodage n’ont plus lieu d’exister.L’application ainsi développée ne prend en entrée qu’un flot de bytes qui correspondent directement au texte encodé. Et elle renvoit également un flot de bytes décodés.7.2.3 ValidationDe par la nature de ce filtre, l’échantillon de tests a été bien plus réduit.En effet, ce filtre respecte un algorithme bien précis qui se retrouve sur tous les documents codés avec celui-ci. Le filtre serait a priori valide ou ne le serait pas.Or il fonctionne sur tous les documents au format Pdf-Lzw que j’ai pu me procurer (environ 5 documents).7.2.4 IntégrationL’une des contraintes principales d’implémentation a été de construire mon application comme une surcharge de la classe InputStream.afin d’en faciliter l’intégration à Windex. Elle s’est alors faîte quasi automatiquement en superposant ce filtre au flux d’entrée des bytes à décoder.7.3 Filtre Ascii85Lors de mes tests sur les documents Pdf-Lzw, je me suis retrouvé confronté à certains documents codés avec 2 filtres (sucessivement) : le Lzw et le Ascii85.Il s'est de plus trouvé qu'au même moment, un client nous a présenté une série de documents qu'il ne pouvait indexer avec Windex. Ses documents étaient codés avec le filtre Ascii85. Aussi, Bruno Lacombe, mon maître de stage, m'a lancé sur cette mission.7.3.1 AnalyseCe filtre est utilisé dans le codage des documents Pdf pour permettre sa lecture au format texte.Ce codeur convertit les éléments parasites et code le documents en utilisant seulement les caractères imprimables.Cependant ce codeur augmente la taille des données.Le filtre Ascii85Decode :Ce filtre decode les données encodés avec l'algorithme Ascii base-85 et doit retourner un flux de données binaires. Voyons un peu de plus près la description de l'encodage Ascii85 afin de mieux appréhender son décodage.Le filtre Ascii85Encode :Ce filtre encode les données sous le format d'encodage Ascii base-85. Généralement, pour 4 octets (bytes) de données, il produit 5 caractères Ascii imprimables (compris entre '!' et 'u').Lorsque le Filtre Ascii85Encode est fermé, il inscrit la séquence de caractères ~> comme EOD marker (marqueur de fin de données).Les données binaires sont encodées par groupe de 4 (par quadruplet). Chaque quadruplet est utilisé pour produire un quintuplet de caractères Ascii. Si le quadruplet est (b1 b2 b3 b4) et le quintuplet (c1  c2  c3  c4  c5), on aura la relation suivante :(b1 x 2563) + (b2 x 2562) + (b3 x 256) + b4 =                                                (c1 x 854) + (c2 x 853) + (c3 x 852) + (c4 x 85) + c5Autrement dit, 4 octets de données binaires sont interprétés comme un nombre en base 256 et sont convertis en base 85. Les 5 chiffres de ce nombre sont alors à leur tour convertis en caractères Ascii en ajoutant 33, qui est le code Ascii pour '!', à chacun.7.3.2 Conception et RéalisationDe la même manière que pour le filtre Lzw, l’application développée ici ne prend en entrée qu’un flot de bytes qui correspondent directement au texte encodé. Elle renvoie aussi un flot de bytes en sortie.7.3.3 Validation et IntégrationDe la même manière que le filtre précédent, il s’agit d’un filtre qui respecte un algorithme de codage bien précis. Il s’est avéré qu’il fonctionne sur tous les documents sur lesquels il a été testé, en particulier sur ceux du client en question. L’objectif semble atteint.Du fait de la demande (relativement pressante) du client concerné, ce module a été aussitôt intégré au logiciel Windex.Son intégration a été similaire au filtre précédent puisqu’il est lui aussi construit comme une surcharge de la classe InputStream.Aucune modification supplémentaire (concernant par exemple l'interface graphique) n'a été nécessaire.7.4 Recherche dans les news et les forums de discussionsLors de la réalisation du cahier des charges, il était question de développer un module permettant la recherche sur les messages contenus dans les news, les forums de discussion ou même les emails. Cependant il a été décidé de ne pas s'y attaquer.En effet, après une brève analyse, il m'est apparu que ces news et ces emails n’avait pas de support fixe, ni de structure de fichiers. J’entends par là qu’un email est rarement visualisé comme un fichier et appartient plus aux applications qui le traitent.8. Réalisation du site de rechercheUne fois la réalisation de ces trois filtres terminée, mon travail s'est orienté vers la réalisation du site de recherche.Plusieurs questions se posent lors de la conception d'un moteur de recherche sur Internet :De quoi on part ?On le construit comment ?Comment on l'alimente ?Comment on le commande ?Comment on le met en place sur le serveur ?Comment on le sauvegarde ?Ces 6 questions forment la structure de travail que j’ai adopté durant mon stage.8.1 Implémentation de la base de données d'URLsL'un des premiers problèmes abordés a été la matière du moteur de recherche. En effet, le moteur recherche mais dans quoi ?8.1.1 AfnicSnooper et UrlBase : Les sites en ".fr"Un premier choix( il fallait en faire un) a été fait en ce qui concerne l'indexation de tout les sites en ".fr". Hélène m' a alors tout de suite suite parler de l'AFNIC (Association Française pour le Nommage Internet en Coopération) qui s'occupe de réglementer le domaine des sites en ".fr" et qui possède surtout l'annuaire de l'ensemble de ces sites (consultable sur http://harmonic.nic.fr/). Nous avons donc tout d'abord contacter l'AFNIC afin d'obtenir la liste des URLs Notre demande est restée lettre morte, en conséquence de quoi il m'a fallu récupérer cette base de données directement via le Web.Cependant, l'AFNIC, très certainement désireuse de ne partager que le strict minimum de ses informations, ne les distribue qu'au compte-gouttes sur son annuaire.En effet, une recherche sur l'annuaire de l'Afnic (qui se nomme Harmonic) ne donne les résultats que par paquets de 10 et il faut à chaque fois suivre un lien (codé) pour obtenir l'URL du site en question (ainsi que d'autres informations le concernant telles que leur propriétaire, leur adresse physique, leur activité, leur rubrique, le type de serveur…).Je me suis donc lancé dans la conception puis la réalisation d'un petit aspirateur (AfnicSnooper) en Java permettant d'aspirer d'une part la liste des URLs de tous les sites en ".fr" mais aussi toutes les informations relatives à ces sites et les stockant dans la base UrlBase (sous Access).Pour chaque site répertorié sur Harmonic, nous avons obtenu (lorsque l'information était disponible) :• Le nom de la société ou de l'association• L'adresse• Le code postal• La ville• Le département• La région• L'activité• La rubrique• Le nom de domaine (l'URL)• Le type de serveur WebNotons au passage que l'Afnic propose dans son annuaire, une carte de la répartition des sites selon les départements. Elle n'est plus du tout à jour. Je me suis alors aussitôt mis à mes crayons de couleurs afin de redonner ses couleurs à cette carte bien parlante.Voyons un peu de plus près la répartition à ce jour.Légende :Jaune clair : moins de 500 sites.Jaune foncé : de 500 à 1000 sites.Orange : de 1000 à 2000 sites.Rouge : de 2000 à 5000 sites.Rose foncé : de 5000 à 10000 sites.Violet : plus de 10000 sites.8.1.2 D'autres sites :De multiples autres orientations de contenu sont possibles pour Naevis.Les principales idées enoncées ont été :• L'indexation des sites des écoles et des universités du monde.• L'indexation des sites à caractère informatique, en particulier les sources contenus dans ceux-ci.• L'indexation par secteur d'activités.Ces idées pourront servir à enrichir le moteur de recherche Naevis pour ses développement futurs.8.2 Installation du moteur de rechercheLa réalisation du site de recherche nécessite plusieurs étapes :➢ La réalisation de l'interface Web.➢ L'implémentation de la servlet de recherche qui traitent les requêtes des utilisateurs et qui envoient les pages de résultats.➢ La mise en place sur le serveur (que nous aborderons plus loin).➢ La réservation du nom de domaine.8.2.1 Le nom de domaine : NaevisUn nom pour le moteur de recherche n’est pas seulement un nom pour le moteur de recherche mais aussi pour le nom de domaine. C’est ce qui a apporté une contrainte de taille : le nom est-il disponible en « .com », « .fr »…C’est là que l’imagination et MozzleStd (un logiciel spécialisé dans la vérification de la disponibilité des noms de domaines) ont fait le reste.8.2.2 L'interface WebL’élément principal de l’interface Web sera bien évidemment le formulaire par le lequel l’internaute pourra lancer sa recherche (cf page suivante), mais c’est aussi le site en entier avec ses services et ses informations utiles et légales (cf page d’encore après).L’interface Web est l’élément visible de l’iceberg, aussi j’ai pris deux minutes de plus pour peaufiner légèrement l’allure de celle-ci en utilisant des feuilles de styles adaptées aux différents navigateurs (IE, Netscape 4, Netscape 6, Opera). Ce qui m'a permis d'améliorer la présentation générale mais surtout.la gestion de cette présentation.Le formulaire de recherche.L’accueil du site Web Naevis.8.2.3 Le traitement des requêtes par la servletLes données de la requête de recherche sont récupérés dans l'objet SearchRequest par la servlet NaevisServlet  (le programme qui gère le traitement de la requête sur le serveur).Elles sont ensuite insérées dans la base de données pour les statistiques (dans la base Naevis  dans la table searchstats).On les transmet ensuite à Windex qui renverra les réponses.8.3 Formulaire d'ajout d'URLLe site est alimenté par la base de données d’Urls des sites en « .fr ».Cependant, il faut donner la possibilité aux internautes de référencer leur site eux-mêmes.Seulement la majeure partie des internautes rechigne à divulguer toute information le concernant.8.3.1 Le formulaireC'est pourquoi j'ai mis en place 2 types d'ajout d'Url :• L'ajout simple• L'ajout optimiséL'ajout simple permet à l'internaute une saisie rapide (et minimum) de :• L'URL de son site• Son e-mail• Son pays (la France par défaut).L'ajout optimisé permet à l'internaute d'améliorer le référencement de son site.En effet, l'internaute a alors la possibilité de donner une multitude de détails supplémentaires afin d'affiner les recherches le concernant. L'internaute peut laisser en plus :• Le nom de sa société ou de son association• L'activité de son site• La rubrique de son site• Son adresse (ou celle de son entreprise)• Son téléphone• Son fax• Des commentaires particuliers sur son site• Son nom.L’internaute renseigne ces informations à travers le formulaire prévu à cet effet.Ces informations seront ajoutées à la base de données WebBase (nous avons ici utilisé la base de données MySQL).Voyons un peu le résumé de tout ça.ChampsAFNIC (AfnicSnooper)UrlBase (Access)WebBase (MySQL)AddURL SimpleAddURL OptimiséDomainexxxxxxxServeurxxE-mailxxxxxPaysxxxxxEntité (Société, Asso)xxxxxxActivitéxxxxRubriquexxxxAdressexxxCPxxxxVillexxxxDépartementxxxxxRégionxxxxxTéléphonexxFaxxxCommentairesxxNomxxDateModifxxxxSuretéxxUserAgentxRefererxRemoteAdressx8.3.2 La démarcheUne fois les données de l’internaute traitées, un e-mail de vérification lui sera envoyé afin de vérifier son intégrité. Il devra le renvoyer pour confirmer son souhait.Un Agent est alors charger de vérifier l’arrivée des mails de confirmation de souhait et d’ordonner l’indexation du site en question par Windex Naevis Server (cette indexation pourra en plus être contrôlée par le champ de sureté, champ qui pourra définir la palette des sites à indexer ou non).8.3.3 Méthodes de détection des tricheursAjouter un site, c'est bien.Ajouter n'importe quoi, n'importe comment, bof.C'est pourquoi je me suis renseigné sur les diverses méthodes des "tricheurs" sur Internet qui trafique leur site afin d'être mieux référencé dans l'ensemble des moteurs de recherche.Voici quelques méthodes de triches et la manière dont elles ont été traitées:• Texte repris en commentaires (balises <!--  -->). • Texte invisible dans la même couleur que le fond de la page.• Les mêmes mots-clés repris indéfiniment dans la balise <meta name="keywords" …>• Le texte dans l'élément de formulaire <input type="hidden" …> (éléments cachés).La plupart de ces méthodes de tricheurs sont “contrées” par l’indexateur de Windex. On pourra imaginer un petit applicatif associé à l'Agent vérificateur qui « scannera » le site Web afin d’en vérifier l’intégrité.8.4 Formulaire d'administrationLe site de recherche mis en place, il nous faut le faire vivre et le voir vivre.Il nous faut pouvoir d'une part contrôler l'ajout des sites Web et d'autre part visualiser les statistiques sur les recherches effectuées par les utilisateurs du moteur de recherche. 8.4.1 Contrôle de l’indexationLe formulaire d'ajout d'URL doit pouvoir être aussi utilisé directement par l’administrateur.Il doit pouvoir gérer la base de données des Urls à indexer :• ajout d'un site• suppression d'un site• modification des propriétés d'un siteCet partie est gérée par la base de données de type MySQL, c’est la base de données WebBase et plus particulièrement la table WebsiteEntity C’est aussi grâce à cette base que nous pourrons « scanner » les sites à indexer, à savoir vérifier éventuellement une partie des informations les concernant, vérifier s’il ne sont pas des tricheurs (au sens énoncé dans la partie 8.3), … et enfin valider le champ de sureté qui permettra leur indexation.8.4.2 Les statistiquesIl est bien sûr très intéressant d'obtenir des statistiques sur les recherches effectuées par les utilisateurs du moteur de recherche Naevis. En effet, ce sont les statistiques qui rendent compte de l’état d’utilisation du Moteur.Nous voulions au moins répondre aux questions suivantes :• Quels sont les mots les plus recherchés ? • D'où viennent les utilisateurs ? • Les utilisateurs trouvent-ils rapidement les informations ? • Combien y a-t-il d'utilisateurs connectés à cet instant ?• Combien y a-t-il de recherches par jour, par semaine … ?C’est la base Search qui nous donne toutes les réponses.Cette liste n'est pas exhaustive : il faudra voir avec les responsables de l'entreprise quelles informations pertinentes pourront apparaître.8.5 Mise en place sur le serveur OdinMême si la mise place n’est pas encore effective sur le serveur Odin, une version de démonstration tourne sur Janus (mon poste de travail). Son installation (qui sera similaire sur Odin) a nécessité les étapes suivantes :Installation d'un serveur de servlets(Tomcat) :➢ Configuration de Tomcat (en particulier le fichier web.xml qui donne le chemin d’accès aux servlets).➢ Importation des classes de la servlet.➢ Importation des pages Html.Installation d'une base de données (MySQL) :➢ Configuration des drivers Jdbc-Odbc pour la communication avec les servlets.➢ Installation des tables WebSiteEntity et NaevisSearch.8.6 Procédure de sauvegardeLa nécessité de sauvegarder d'une part mon travail, d'autre part les données qui seront indexés par le moteur de recherche ainsi que les statistiques associées, n'est pas à démontrer.Une sauvergarde générale de tous mes travaux a été gravée en plusieurs exemplaires. Des copies de ce CD sont stockées hors de l'entreprise (garantissant la sauvegarde des données même en cas d'incendie de l'entreprise).Pour ce qui est des bases d'Urls et de statistiques, elles sont stockées dans une base MySQL sur le serveur Zeus (le serveur Unix), de même que pour les index de Naevis.• Dans un premier temps, la sauvegarde de ces données aura lieu les mêmes jours que la sauvegarde des données déjà mise en place par Marc.• Puis, selon les besoins (concernant principalement la capacité mémoire), cette sauvegarde se trouvera déplacée les mardis et jeudis (qui seront alors consacrés à cette sauvegarde particulière).La mise en place de cette procédure de sauvegarde, bien évidemment automatisée (seule l'insertion du CD vierge ne l'est pas encore…), n'a été qu'une formalité puisqu'il a suffit à Marc de notifier l'emplacement des données à sauvergarder dans son programme de sauvergarde.Un programme particulier pourra être mis en place si la taille du support de sauvergarde (un CD de 650 Mo pour l'instant) n'est plus suffisante.9. Résultats9.1 Les filtresTous les filtres réalisés fonctionnent et sont intégrés à la version commerciale de Windex9.2 Construction de la base de données d'URLsLa base de données des sites en « .fr » est prête à l’emploi, elle contient tous les sites référencés par l’annuaire de l’Afnic.9.3 Formulaire d'ajout d'URLLe formulaire d’ajout d’Urls est entièrement opérationnel.9.4 Installation du site de rechercheLe site est prêt à être mis en place.Une version de démonstration est disponible sur mon poste de travail Janus, on peut y accéder via l’Url suivante : http://www.naevis.fr.st/ (cette démo n'est pas toujours en ligne).9.5 Formulaire d'administrationIl est prêt à être mis en place.9.6 Orientations techniques souhaitéesUne telle indexation nécessite par conséquent une capacité de stockage non négligeable.En effet l'indexation d'une vingtaine de documents par windex nous donne des index d'une taille égale à 20% de la taille initiale des documents.Il nous faudra éventuellement réaliser une petite étude sur les capacités nécessaires à l'hébergement de ces données.10. ConclusionDurant mon stage, Bruno Lacombe terminait la réalisation de Windex Server, ce qui m’a permis de discuter avec lui de quelques éléments de conception de son logiciel en relation avec le site recherche, en particulier la notion de site (regroupant plusieurs pages) offrant par exemple une vision différente (plus compacte) des résultats. Nous nous sommes aussi penchés sur la gestion d’une recherche avec contexte (qui permettrait à l’utilisateur d’orienter sa recherche en fonction des contextes qui lui sont proposés et qu’il choisit). Ces modifications s’intègreront très certainement dans les prochaines versions de Windex Server et seront donc peut-être disponibles à travers le site de recherche.En ce qui concerne le site de recherche proprement dit, on pourrait encore y travailler, et aussi lui trouver des orientations utiles pour l’avenir afin de justifier son existence dans « le monde de l’entreprise ».Naevis, site de recherche, recherche orientation pour l’avenir.Enfin je voudrais dire quelques mots  sur tout ce que je n’ai pas dit et qui est certainement le plus important. Mais il y a en trop.Cependant, par dessus tout, je voudrais remercier Bruno Lacombe et Hélène Omari pour leur disponibilité et leur gentillesse ainsi que Marc Mendez pour la pertinence de ses réponses, mais aussi les gens d'Erebus pour les services qu'ils m'ont rendu et tous les autres.11. Glossaire404 : Code d'erreur (et, par extension, nom du document la présentant) souvent rencontrée sur le web: elle vous informe que le document que vous convoitez n'existe plus ou ne se trouve plus à l'URL requise. Voici les erreurs les plus courantes que vous pouvez rencontrer :• 200 : Correct • 201 : Correct • 301 : Déplacé définitivement • 302 : Déplacé temporairement • 400 : Mauvaise requête • 401 : Non autorisé • 402 : Accès payant • 403 : Interdit • 404 : Introuvable • 405 : Méthode non supportée • 407 : Authentification proxi exigée • 408 : Lenteur réseau • 409 : Conflit • 500 : Erreur serveur • 501 : Programme absent • 502 : Mauvaise passerelle • 503 : Service indisponible • 504 : La passerelle met trop de temps à répondre • 505 : Version HTTP non reconnue.API : Application Programming Interface. Interface de programmation d'applications, contenant un ensemble de fonctions courantes de bas niveau, bien documentées, permettant de programmer des applications de « Haut Niveau ».applet : Petit programme, souvent accompagné de données bien plus volumineuses que lui, et conçu pour être téléchargé via un réseau à chaque fois qu'on veut l'utiliser, en particulier par un navigateur, qui se chargera de l'exécuter. Applette et appliquette sont les versions françaises du terme originel anglais Applet. Selon certaines sources, Applet signifie « APPLication widgET ».aspirateur : Un « Aspirateur de Site » va aller récupérer toutes les données contenues par un site web et vous les sauvegarder sur votre disque dur. De la sorte, vous pouvez le consulter autant que vous le voulez sans être connecté.aspirer : Télécharger exhaustivement les fichiers formant un site web, généralement à l'aide de l'outil adéquat, fort logiquement appelé un aspirateur.balise : Caractère particulier, ou série de caractères, utilisés pour la mise en forme d'un document (souvent du texte), et qui sera invisible pour l'utilisateur final. Un exemple type est l'insertion des liens d'un document hypertexte. Voir aussi  tag en anglais.browser : Version anglaise courante pour navigateur.CGI : Common Gateway Interface. Technique permettant à un client d'exécuter des programmes spécifiques sur un serveur. C'est lourd, car chaque connexion provoque le lancement, l'exécution et la fin d'un programme indépendant. Ces programmes sont généralement écrits en C, C++, Perl ou encore TCL. C'est l'équivalent des servlets en Java.CSS : Cascading Style Sheet. Modèle de feuille de style utilisé dans les browsers web (à partir des versions 4 pour MSIE et Netscape Navigator). Elles permettent (entre autres) de modifier l'aspect de tout un site en ne touchant qu'à un seul fichier (la feuille de style), et donc d'alléger grandement la gestion d'un site.DHTML : Dynamic HyperText Markup Language. Le DHTML se définit comme un (savant) mélange de trois développements de la publication sur Internet : les feuilles de styles (CSS1), les langages de script, principalement le javascript, ainsi que les objets et leur positionnement en vue de produire des pages dynamiques et interactives. Notons de plus :• l’aspect dynamique réside dans le fait que la page Html peut être modifiée après le chargement de celle-ci par le navigateur.• Une volonté d’effectuer les animations et interactions côté client (c’est-à-dire côté browser) sans faire appel aux ressources du serveur par des applets Java ou des ActiveX.• Cette technique DHTML a un aspect « high-tech » et est réservée aux versions 4.0 (ou plus) de Internet Explorer et Netscape.DOC : Abréviation de « Document ». fichier contenant souvent un document issu d'un traitement de texte, ou parfois une documentation. Mais de toute manière, c'est du bla-bla en mode caractère avec une plus ou moins grande quantité de codes de formatage dedans. Le format natif de Word s'appelle par exemple ainsi.DTD : Document Type Definition.extranet : Utilisation de l'Internet dans laquelle une organisation profite du Réseau des Réseaux pour interconnecter ses différents constituants.frame : Concept inventé par Netscape, consistant à diviser la fenêtre d'un browser web en plusieurs petites fenêtres, dans chacune desquelles on affiche un document HTML différent (tout comme on peut avoir plusieurs documents sous Word par exemple). Chaque Frame possède son propre URL. Équivalent par ailleurs aux fenêtres MDI.La meilleur traduction semble bien être cadre.HTML : Hyper Text Markup Language. Format de document du web, défini par la RFC 1866. Ce langage simpliste (forme très simplifiée de SGML) est formé de petits « marqueurs » (Exemples : <b> pour passer en gras), que le navigateur sait reconnaître pour agir en conséquence. Ce format est nettement plus puissant et plus simple que les pages Vidéotex, mais il a pâti des luttes stupides entre sociétés qui visaient à mettre la main sur le net. Du coup, pendant un temps, en 1995-96, ses spécifications changeaient quasiment toutes les semaines (chacun développant ses propres tags dans son coin. Heureusement, un programme de lecture des fichiers HTML se contente d'ignorer superbement ce qu'il ne comprend pas). On en est arrivé à la version 4, mais l'histoire s'arrêtera là, car HTML est destiné à disparaître au profit de langages plus puissants comme XHTML.HTTP : HyperText Transfer Protocol. protocole de transmission dédié aux clients et aux serveurs du web.HTTPS : HyperText Transfer Protocol Secure. protocole de transmission issu de Netscape lié à une connexion par socket sécurisée, autrement dit HTTP avec une pincée de SSL.Intranet : Internet appliqué à l'intérieur même d'une organisation (entreprise, administration...).JAR : Java ARchive. Archive compressé incluant toutes les classes en Java nécessaire au bon fonctionnement d'une applet. L'intérêt est de ne plus avoir qu'une seule requête à effectuer pour la récupérer.Java : Langage de programmation issu d'Oak et créé par Sun. Il est orienté réseau et objet, et sa syntaxe est dérivée de celle du C++. Son principal avantage est d'être entièrement portable (donc multiplate-forme) et une des raisons de son succès est sa possibilité d'insertion au sein d'un document HTML sous forme d'applet (ou « Appliquettes » en français), par le biais d'une JVM, moyennant une politique de sécurité assez stricte.JDK : Java Development Kit. Environnement de développement de Sun permettant de produire du code Java et servant de référence.JSDK : Java Servlet Development Kit. Kit de développement de servlet en Java.JVM : Java Virtual Machine. Interpréteur du code Java qui permet l'exécution du programme, sur une machine en particulier (le code Java restant le même d'un système à un autre). Voir applet.lien mort : Lien hypertexte pointant vers une ressource n'existant plus, n'ayant jamais existé, ou sur laquelle des restrictions d'accès ont été imposées. Classiquement, sur le web, le symptôme est une erreur 404.moteur de recherche : Logiciel permettant d'effectuer des recherches dans les immenses ressources de l'Internet. Ces systèmes se succèdent à un rythme effrené. On distingue pour le moment trois types de moteurs : ceux dont l'indexation est effectuée par des humains (type Yahoo), les robots, aussi appelés spiders (Alta Vista), et les méta-moteurs, qui permettent l'utilisation des capacités des autres d'une façon unifiée.PDF : Portable Document Format. format de document d'Adobe, à utiliser avec Acrobat. Ce format se veut portable, donc universel.PDF-Deflat : Fichier PDF compressé avec l'algorithme Deflat.PDF-Lzw : Fichier PDF compressé avec l'algorithme LZW.servlet : Applet destinée à être exécutée sur le serveur et non pas chez le client.SHTML : Document sur le web, en général un document HTML, qui sera traité par le serveur avant son envoi, par exemple pour faire du SSI.spider : Signifie « Araignée » en anglais. moteur de recherche explorant de lui-même les informations disponibles sur le Net, en sautant de lien en lien. Le premier Spider connu fut Web Crawler.SSI : Server Side Include. Avant d'envoyer un fichier, le serveur y inclut des données particulières, par exemple des données « toutes fraîches ».URL : Uniform Resource Locator. Sur le web, c'est la méthode d'accès à un document distant, créant ainsi un lien hypertexte (On peut aussi désigner de cette manière des serveurs en ftp anonyme ou des sites gopher. En fait, le type de connexion peut être : file, ftp, gopher, http, news ou wais). Un URL est dit « long » quand il contient des données concernant le client et pas seulement le serveur.W3C : World Wide Web Consortium. Organisme qui crée des standards pour le Web. Sa mission est de mener le Web à son potentiel maximal, tout en développant des technologies (spécifications, lignes directrices, logiciels et outils) qui favorisent l’échange d’information, le commerce, l’inspiration, le libre arbitre, et la compréhjension collective. Cette organisation internationale réunit près de 400 membres (pour la plupart des cadres de Apple, Microsoft, IBM, Macromedia…) sous l’égide du MIT (Massachusett Institute of Technology), de l’INRIA (Institut National de la Recherche en Informatique et en Automatique) et de l’université de Keiô.12. Bibliographie12.1 Programmation en Java :IBM VisualAge for Java : http://www-4.ibm.com/software/ad/vajava/Java API Documentation : http://java.sun.com/j2se/1.3.0/docs/api/overview-summary.htmlLes servlets en Java : http://java.sun.com/products/servlet/2.2/javadoc/overview-summary.htmlPenser en Java : http://penserenjava.free.fr/12.2 Les navigateurs :Microsoft Internet Explorer : http://www.microsoft.com/windows/ie/default.htmMozilla : http://www.mozilla.org/Netscape Navigator : http://www.netscape.com/Opéra : http://www.opera.com/Microsoft, Windows et Internet Explorer sont des marques de Microsoft Corporation, déposées ounon aux Etats-Unis d'Amérique et/ou dans d'autres pays.Netscape est une marque de Netscape Communications Corporation, déposée ou non aux Etats-Unis d'Amérique et/ou dans d'autres pays.12.3 Structure des documents Microsoft WordVoici quelques articles et quelques documents qui m'ont permis d'enrichir ma connaissance de la structure des documents Word :➢ http://support.microsoft.com/support/kb/articles/Q174/1/40.ASP➢ http://snake.cs.tu-berlin.de:8081/~schwartz/pmh/elser/word6/format.htmlMicrosoft Word 6.0 binary file format :➢ http://www.btinternet.com/~shaheedhaque/generator_wword6.htmMicrosoft Word 97 binary file format :➢ http://www.redbrick.dcu.ie/~bob/Tech/wword8.htmlCes deux derniers documents sont assez récursifs sur le Web et semblent être l'unique source d'informations disponible sur le Web au sujet de la structure des documents Word.12.4 La méthode de Lempel-Ziv-Welch :AlphaBeta - Algorithme de Lempel-Ziv-Welch (LZW) :➢ http://www.alphabeta-net.com/LZW.htmlAutre explication (en Anglais) sur l'algorithme de LZW :➢ http://www.rasip.fer.hr/research/compress/algorithms/fund/lz/lzw.html12.5 Les moteurs de recherche :Dans le cadre de la mise en place du moteur de recherche, il m’a fallu me documenter sur les moteurs de recherches, leurs fonctionnalités, leurs cibles, leur fonctionnement…Ceci afin de déterminer les critères sur lesquels je pourrais me reposer pour la mise en place du site de recherche.Voici donc un échantillon des principaux sites de recherche existant sur le Web.Altavista : Moteur d'indexation automatique de l'Internet conçu par une équipe de Digital (dont le français Monnier) sur le campus de Stanford, qui indexe des dizaines de millions de documents du web et qui permet d'y effectuer une recherche en quelques secondes. Le robot d'indexation s'appelle Scooter. Devenu complètement commercial, c'est aussi devenu un moteur de mauvaise qualité (réponses orientées).➢ http://www.altavista.com/Ebay :➢ http://pages.ebay.com/index.html (version originale)➢ http://pages.fr.ebay.com/index.html (VF).Excite :  ➢ http://www.excite.com/ (version originale)➢ http://www.excite.fr/ (VF).Google : ➢ http://www.google.com/ (version originale)➢ http://www.google.fr/ (VF).Lycos : http://www.fr.lycos.de/WebCrawler : http://www.webcrawler.com/Yahoo : Yet Another Hierarchically Officious Oracle. Système de recherche sur le Net. C'est en fait un site de référencement des adresses (URL), travail qui est ici effectué par des êtres humains qui trient les documents HTML, contrairement à la concurrence (Alta Vista), où ce sont des robots idiots qui bossent (et qui vont bien plus vite). Yahoo est cotée en bourse depuis le 12 avril 1996, obtenant 800 millions de dollars le premier jour, ce fut l'une des premières introductions en bourse miraculeuses du secteur, bien avant le délire de la nouvelle économie.➢ http://www.yahoo.com/ (version originale).➢ http://fr.yahoo.com/ (VF).Outre les sites des moteurs de recherche bien connus, quelques sites parlant plus généralement des moteurs de recherche ont aussi retenu mon attention :Search Engine Watch Tips About Internet Search Engines & Search Engine Submission :➢ http://searchenginewatch.com/Allsearchengines.com :➢ http://www.allsearchengines.com/La recherche documentaire sur Internet :➢ http://www.multimania.com/patderam/docu.htm12.6 DiversLotus : http://www.lotus.com/Multimédia Solutions : http://www.lug.com/Windex :Présentation : http://www.lug.com/soft/windex.shtmlTélécharger la version d'évaluation : http://www.lug.com/telecharger/telecharger.shtmlErebus : http://www.erebus.fr/Spy-CD : http://www.spycd.com/Apple, Mac et Macintosh sont des marques d'Apple Computer, Inc, déposées ou non aux Etats-Unis d'Amérique et/ou dans d'autres pays.Lotus Notes est une marque de Lotus Development Corporation, déposées ou non aux Etats-Unisd'Amérique et/ou dans d'autres pays.Windex est une marque déposée à l'INPI par Multimédia Solutions.13. MatérielLa diversité des environnements est l'un des facteurs prépondérant chez Multimédia Solutions. En effet, la portabilité étendue de leurs logiciels nécessite de pouvoir les tester sur toutes les plates-formes sur lesquels ils sont disponibles.Les environnements disponibles sur chaque machine sont :• Serveur CERBER : Linux• Serveur ODIN : Windows NT4 SP6• Serveur ZEUS : Linux• Ordinateur PAX : Windows 2000• Ordinateur SIF : Windows 98• Ordinateur THOR : Windows 2000• Ordinateur JANUS : Windows 95Un Macintosh présent chez des partenaires de l'entreprise permet les tests sous environnement Mac. L'ordinateur JANUS m'a été "attribué" pour la durée de mon stage, c'est sur ce poste que j'ai développé les applications présentées dans ce rapport. Il m'a été de plus autorisé de me connecter sur ZEUS afin d'accèder à Linux.Voici la structure du réseau informatique de Multimédia Solutions :14. AnnexesVoici la liste des annexes jointes au rapport :• Fiche Entreprise.• Brochures Commerciales de l’Entreprise.• Documents relatifs au sujet de stage :o manuel d’installationo manuel utilisateuro manuel de maintenance• code source (pour les projets d’informatique)ENSEIRBRapport de Stage de début de 3ème annéeMultimédia SolutionsGuillaume Barraud39/1Rapport de stage de début de 3ème_ année.Guillaume BarraudDépartement : Informatique30 novembre 2001